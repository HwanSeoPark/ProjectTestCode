client:
  #  url: ${local.ip}:3000
  url: http://localhost:3000

server:
  #  url:  ${local.ip}:8080
  url: http://localhost:8080




# Spring 설정
spring:
  datasource:
    url: jdbc:mysql://localhost:3306/noticeboard
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: root
    password: 1234
  sql:
    init:
      mode: always
  jpa:
    database: mysql
    database-platform: org.hibernate.dialect.MySQLDialect
    hibernate:
      ddl-auto: validate

  # Redis 설정
  data:
    redis:
      port: 6379
      host: localhost
      password: 1234

  # Mail 설정
  mail:
    host: smtp.gmail.com
    port: 587
    username:
    password:

    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

  # OAuth2 설정
  security:
    oauth2:
      client:
        registration:
          naver:

          google:

        provider:
          naver:
# Google의 provider 구성 정보는 설정하지 않아도 됨
# Spring Security가 Google에 대한 기본 Provider 정보를 이미 내장하고 있기 때문임.
# Spring Security OAuth2 클라이언트 라이브러리는 널리 사용되는 OAuth2 공급자(예: Google, GitHub, Facebook 등)에 대한 기본 설정을 제공하고 있습니다.